<div class="container-address-book">
  <div>
  <div class= "poi-title">
      <i class="fa-solid fa-address-book fa-2xl" style="color: #11009e;"></i>
    <h2>My Address Book </h2>
  </div>
    <%= simple_form_for(@poi) do |f| %>
    <div>
      <div class="form-inputs">
        <%= f.input :name %>
        <%= f.input :address, label: false, input_html: {id: 'myPOI'} %>
        <%= f.input :category, collection: ["Friend/Family", "Restaurants", "Education", "Work"]   %>

      </div>

      <div class="form-actions">
        <%= f.button:submit %>
      </div>
    </div>
    <% end %>
  </div>

  <div>
    <% if current_user.maps.any? %>
        <% @pois.each do |poi| %>
          <div class="card-poi">
            <div class="poi-white">
              <div>
                <p><%= poi.name.capitalize %></p>
                <p class="poi-black"><%= poi.category.capitalize %></p>
              </div>
              <div class="poi-edit-garbage" >
                <i class="fa-solid fa-pen" style="color: #11009e;"></i>
                <i class="fa-solid fa-trash-can" style="color: #11009e;"></i>
              </div>
            </div>
             <div class="poi-purple">
               <p><%= poi.address %></p>
             </div>
          </div>
        <% end %>
    <% else %>
      <p>You have no maps</p>
    <% end %>
  </div>
</div>

<script>
  (g=>{var h,a,k,p="The Google Maps JavaScript API",c="google",l="importLibrary",q="__ib__",m=document,b=window;b=b[c]||(b[c]={});var d=b.maps||(b.maps={}),r=new Set,e=new URLSearchParams,u=()=>h||(h=new Promise(async(f,n)=>{await (a=m.createElement("script"));e.set("libraries",[...r]+"");for(k in g)e.set(k.replace(/[A-Z]/g,t=>"_"+t[0].toLowerCase()),g[k]);e.set("callback",c+".maps."+q);a.src=`https://maps.${c}apis.com/maps/api/js?`+e;d[q]=f;a.onerror=()=>h=n(Error(p+" could not load."));a.nonce=m.querySelector("script[nonce]")?.nonce||"";m.head.append(a)}));d[l]?console.warn(p+" only loads once. Ignoring:",g):d[l]=(f,...n)=>r.add(f)&&u().then(()=>d[l](f,...n))})({
    key: "<%= ENV['GOOGLE_API'] %>",
    v: "weekly",
    // Use the 'v' parameter to indicate the version to use (weekly, beta, alpha, etc.).
    // Add other bootstrap parameters as needed, using camel case.
  });
        const callAutocomplete = async () => {
            var autocomplete;
            const { Place } = await google.maps.importLibrary("places");
            var searchInput = 'myPOI';
            autocomplete = new google.maps.places.Autocomplete((document.getElementById(searchInput)), {
                types: ['geocode'],
                fields: ['geometry', 'name', 'place_id']

            });

            google.maps.event.addListener(autocomplete, 'place_changed', function () {
                var near_place = autocomplete.getPlace();
                console.log(near_place);
                var place_id = near_place.place_id;
                console.log(place_id);
                var latitude = near_place.geometry.location.lat();
                console.log(latitude);
                var longitude = near_place.geometry.location.lng();
                console.log(longitude);
            });

        };
        callAutocomplete();

</script>
