<div class="score-div">
  <p class="mt-5"><i class="fa-solid fa-arrow-left"></i> <%= link_to "Go back to #{@map.city}", map_path(@map.id), class: "text-decoration-none" %></p>

<h1 class="text-center"><strong><%= @map.city %>'s Points of Interest</strong></h1>
</div>


<div class="container-address-book">
  <div>
    <%= simple_form_for([@map, @poi], html: { data: { controller: 'autocomplete' } }) do |f| %>
    <div>
      <div class="form-inputs">

        <%= f.input :name, placeholder: "Tom's House" %>
        <%= f.input :address, placeholder: "2543 Rosemont St", label: false, input_html: { data: { autocomplete_target: 'searchField' } }%>

        <%= f.input :category, collection: ["Friends/Family", "Education", "Work"]   %>
        <%= render 'shared/form_hidden_google_info', f: %>

      </div>

      <div class="form-actions">
        <%= f.button:submit, "Add Point of Interest", class: "btn-options" %>
      </div>
    </div>
    <% end %>
  </div>


  <div>
    <% if current_user.maps.any? %>
        <% @point_of_interests.each do |poi| %>
          <div class="card-poi">
            <div class="poi-white">
              <div>
                <p><%= poi.name.titleize %></p>
                <p class="poi-black"><%= poi.category.titleize %></p>
              </div>
                  <div class="poi-garbage" >
                  <%= link_to point_of_interest_path(poi), data: {turbo_method: :delete, turbo_confirm: "Delete #{poi.name}?"} do %>
                      <i class="fa-solid fa-trash-can" style="color: #11009e;"></i>
                  <% end %>
              </div>
            </div>
             <div class="poi-purple">
               <p><%= poi.address.titleize %></p>
             </div>
          </div>
        <% end %>
    <% else %>
      <p>You have no maps</p>
    <% end %>
  </div>
</div>

<script>
  (g=>{var h,a,k,p="The Google Maps JavaScript API",c="google",l="importLibrary",q="__ib__",m=document,b=window;b=b[c]||(b[c]={});var d=b.maps||(b.maps={}),r=new Set,e=new URLSearchParams,u=()=>h||(h=new Promise(async(f,n)=>{await (a=m.createElement("script"));e.set("libraries",[...r]+"");for(k in g)e.set(k.replace(/[A-Z]/g,t=>"_"+t[0].toLowerCase()),g[k]);e.set("callback",c+".maps."+q);a.src=`https://maps.${c}apis.com/maps/api/js?`+e;d[q]=f;a.onerror=()=>h=n(Error(p+" could not load."));a.nonce=m.querySelector("script[nonce]")?.nonce||"";m.head.append(a)}));d[l]?console.warn(p+" only loads once. Ignoring:",g):d[l]=(f,...n)=>r.add(f)&&u().then(()=>d[l](f,...n))})({
    key: "<%= ENV['GOOGLE_API'] %>",
    v: "weekly",
    // Use the 'v' parameter to indicate the version to use (weekly, beta, alpha, etc.).
    // Add other bootstrap parameters as needed, using camel case.
  });

</script>
